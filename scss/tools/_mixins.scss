@mixin border-box () {
	*, *:before, *:after {
	  box-sizing: inherit;
	}
}

// Hide from both screenreaders and browsers: h5bp.com/u
@mixin hidden {
    display: none !important;
    visibility: hidden;
}

// Hide only visually, but have it available for screenreaders: h5bp.com/v
@mixin visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

// Media queries

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpoint-sm) and (max-width: $brkpoint-md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint-md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint-lg) {
      @content;
    }
  }
   @else {
   	@error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}

// Generate modifier color classes

@mixin bg-colors($map) {
	@each $theme, $color in $map {
		&--#{$theme} {
			background-color: $color;
			&:hover {
				background-color: darken($color, 18%);
			}  
			&:active{
				background-color: lighten($color, 40%);
			}  
		}
	}
}

@mixin box-shadow($top, $left, $blur, $size, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $size $color;
        -moz-box-shadow:inset $top $left $blur $size $color;
        box-shadow:inset $top $left $blur $size $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $size $color;
        -moz-box-shadow: $top $left $blur $size $color;
        box-shadow: $top $left $blur $size $color;
    }
}

